require('dotenv').config();
const jwt = require('jsonwebtoken');

const checkRoles = (allowedRoles) => {
  return (req, res, next) => {
    const authHeader = req.headers['authorization'];
    if (!authHeader || !authHeader.startsWith('Bearer ')) {
      return res.status(401).json({ message: 'Token manquant ou mal formaté' });
    }

    try {
      const token = authHeader.split(' ')[1];
      const decoded = jwt.verify(token, process.env.ACCESS_JWT_KEY);

      const userRoles = decoded.roles || [];
      const hasPermission = allowedRoles.some(role => userRoles.includes(role));

      console.log(userRoles);
      
      if (!hasPermission) {
        return res.status(403).json({ message: 'Accès refusé : rôle insuffisant', userRoles });
      }

      req.user = decoded;
      next();
    } catch (err) {
      return res.status(401).json({ message: 'Token invalide ou expiré', error: err.message, allowedRoles, userRoles});
    }
  };
};

module.exports = checkRoles;